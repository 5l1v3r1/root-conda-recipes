sudo: false

language: python
compiler: gcc

# branches:
#   only:
#     - master
#     - dev

notifications:
  email: false

# cache:
#   timeout: 1000
#   directories:
#     - /home/travis/root_cache  # conda build directory

os:
  - linux
#  - osx

python:
  - "2.7"
  - "3.5"
  - "3.6"

# env:
#   - ROOT_VERSION=5
#   - ROOT_VERSION=6

matrix:
    # Abort all builds on a single failing matrix entry.
    fast_finish: true
    include:
        - os: linux
          dist: trusty
          sudo: false
          addons:
            apt:
              sources:
                - ubuntu-toolchain-r-test
              packages:
                - gcc-7
                - g++-7
                - cmake
          env:
            - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
            - PYTHON=${TRAVIS_PYTHON_VERSION}
            - ROOT_CACHE_DIR=/home/travis/root_cache

#         - os: osx
# #          osx_image: xcode10
#           osx_image: xcode8
#           env:
#             - MATRIX_EVAL="brew install gcc && CC=gcc-7 && CXX=g++-7"
#             - PYTHON=${TRAVIS_PYTHON_VERSION}
#     # allow_failures:
#     #     - os: osx

before_install:
    - eval "${MATRIX_EVAL}"
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        brew update ;
      fi

install:
  # Conda
  - if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
      curl --silent http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -o miniconda.sh ;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget -nv http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh ;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda install --yes python=${TRAVIS_PYTHON_VERSION}
  - hash -r
  - which python
  - python -V
  - which gcc
  - gcc --version
  - which clang
  - clang --version
  - echo "CC  --> " ${CC}
  - echo "CXX --> " ${CXX}
  - echo "ROOT_CACHE_DIR --> " ${ROOT_CACHE_DIR}
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - conda install --yes -q conda-build
  # run build scripts
  - conda config --add channels conda-forge
#  - timeout 40m cd $TRAVIS_BUILD_DIR && CC=${CC} CXX=${CXX} conda build --numpy 1.15 ./root5 > root5_build.log 2>&1
#  - timeout 40m cd $TRAVIS_BUILD_DIR && CC=${CC} CXX=${CXX} conda build --dirty --numpy 1.15 --croot /home/travis/miniconda/conda-bld/root_build/work/root6 ./root6 2>&1 | tee root6_build.log
  - cd $TRAVIS_BUILD_DIR && CC=${CC} CXX=${CXX} ROOT_CACHE_DIR=${ROOT_CACHE_DIR} TRAVIS_BUILD_DIR=${TRAVIS_BUILD_DIR} conda build --dirty --numpy 1.15 --croot /home/travis/miniconda/conda-bld/root_build/work/root6 ./root6 2>&1 | tee root6_build.log
  - cd $TRAVIS_BUILD_DIR && bash ./scripts/build_deps.sh
  # actual package installation
  - conda config --add channels http://conda.anaconda.org/NLeSC  
  #- conda config --add channels conda-forge
  - conda config --set show_channel_urls yes
  - conda config --show channels
  # - conda create -q -n testenvROOT5 python=${TRAVIS_PYTHON_VERSION} root=5 numpy rootpy
  # - source decativate && source activate testenvROOT5
  # - root -b -q
  - conda create -q -n testenvROOT6 python=${TRAVIS_PYTHON_VERSION} root=6 numpy rootpy
  - source decativate && source activate testenvROOT6
  - root -b -q  

script:
  - python tests/test_root.py
  - python tests/test_stl.py

# before_cache:
#   -|
#   echo "Caching..."

# on_failure:
#   -|
#   echo "Showing current directory contents"
#   ls -la
#   - tail --lines=1000 root6_build.log
#   # - tail --lines=1000 root5_build.log

after_failure:
  -|
  echo "Showing current directory contents"
  ls -la
  - tail --lines=1000 root6_build.log
  # - tail --lines=1000 root5_build.log

after_success:
  -|
  echo "Build finished."
  ls -la scripts
